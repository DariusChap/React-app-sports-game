{"version":3,"sources":["assets/audio/Basketball_Bounce_Sound_Effect.mp3","assets/audio/Basketball_Net_Swish_Sound_Effect.mp3","assets/audio/Pacman_Eating_Cherry_Sound_Effect.mp3","assets/images/Lebron-blockers.jpeg","assets/images/CP3-Stealers.jpg","assets/images/Steph-Shooters.jpg","assets/images/MJ-Dunkers.jpg","components/scoreboard/Scoreboard.js","components/team/Team.js","components/game/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ScoreBoard","props","className","awayTeamStats","points","homeTeamStats","Team","shotPercentageDiv","stats","shots","shotPercentage","Math","round","name","src","logo","alt","onClick","shotHandler","Game","shoot","team","teamStatsKey","state","shotSound","play","random","setTimeout","pointSound","setState","resetGame","resetCount","resetSound","Audio","ShotSound","PointSound","ResetSound","this","venue","awayTeam","logoSrc","homeTeam","Component","App","blockers","Blockerlogo","stealers","Stealerlogo","shooters","Shooterlogo","dunkers","Dunkerlogo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b4ce4cbe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Basketball_Bounce_Sound_Effect.6247aedc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Basketball_Net_Swish_Sound_Effect.89703d43.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Pacman_Eating_Cherry_Sound_Effect.a86fee25.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Lebron-blockers.f69610da.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/CP3-Stealers.a61e9787.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Steph-Shooters.e1de8abe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MJ-Dunkers.dfec87d0.jpg\";","import React from 'react';\r\n\r\nfunction ScoreBoard(props) {\r\n    return (\r\n        <div className=\"ScoreBoard\">\r\n        <div className=\"teamStats\">\r\n            <h3>AWAY</h3>\r\n            <h3>{props.awayTeamStats.points}</h3>\r\n        </div>\r\n\r\n        <h3>SCOREBOARD</h3>\r\n\r\n        <div className=\"teamStats\">\r\n            <h3>HOME</h3>\r\n            <h3>{props.homeTeamStats.points}</h3>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default ScoreBoard;","import React from 'react';\r\n\r\n\r\nfunction Team(props) {\r\n    let shotPercentageDiv\r\n\r\n\r\n    if (props.stats.shots) {\r\n        const shotPercentage = Math.round((props.stats.points / props.stats.shots) * 100)\r\n        shotPercentageDiv = (\r\n            <div>\r\n                <strong>Shooting %: {shotPercentage} </strong>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"Team\">\r\n            <h2>{props.name}</h2>\r\n\r\n            <div className=\"Indentity\">\r\n                <img src={props.logo} alt={props.name} />\r\n            </div>\r\n\r\n            <div>\r\n                <strong>Shots:</strong> {props.stats.shots}\r\n            </div>\r\n\r\n            <div>\r\n                <strong>Points:</strong> {props.stats.points}\r\n            </div>\r\n\r\n            {shotPercentageDiv}\r\n\r\n\r\n            <button onClick={props.shotHandler}>Shoot</button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Team;","import React, { Component } from 'react';\r\nimport ScoreBoard from '../scoreboard/Scoreboard';\r\nimport Team from '../team/Team';\r\nimport ShotSound from '../../assets/audio/Basketball_Bounce_Sound_Effect.mp3';\r\nimport PointSound from '../../assets/audio/Basketball_Net_Swish_Sound_Effect.mp3';\r\nimport ResetSound from '../../assets/audio/Pacman_Eating_Cherry_Sound_Effect.mp3';\r\n\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            resetCount: 0,\r\n            homeTeamStats: {\r\n                shots: 0,\r\n                points: 0\r\n\r\n            },\r\n            awayTeamStats: {\r\n                shots: 0,\r\n                points: 0\r\n\r\n            }\r\n        }\r\n        this.shotSound = new Audio(ShotSound)\r\n        this.pointSound = new Audio(PointSound)\r\n        this.resetSound = new Audio(ResetSound)\r\n        // Sounds from soundfxcenter.com\r\n    }\r\n    shoot = (team) => {\r\n        const teamStatsKey = `${team}TeamStats`\r\n        let points = this.state[teamStatsKey].points\r\n        this.shotSound.play()\r\n\r\n\r\n        if (Math.random() > 0.5) {\r\n            points += 1\r\n\r\n            setTimeout(() => {\r\n                this.pointSound.play()\r\n            }, 100);\r\n\r\n\r\n        }\r\n\r\n\r\n        this.setState((state, props) => ({\r\n            [teamStatsKey]: {\r\n                shots: state[teamStatsKey].shots + 1, points\r\n            }\r\n        }))\r\n    }\r\n\r\n    resetGame = () => {\r\n        this.setState((state, props) => ({\r\n           resetCount: state.resetCount + 1, \r\n           homeTeamStats: {\r\n               shots: 0,\r\n               points: 0\r\n           },\r\n           awayTeamStats: {\r\n               shots: 0,\r\n               points: 0\r\n           } \r\n        }));\r\n            this.resetSound.play()\r\n            \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Game\">    \r\n            <ScoreBoard \r\n            awayTeamStats={this.state.awayTeamStats}\r\n            homeTeamStats={this.state.homeTeamStats}\r\n            \r\n            />\r\n                <h1>Welcome to {this.props.venue}</h1>\r\n                <div className=\"stats\">\r\n                    <Team name={this.props.awayTeam.name}\r\n                        logo={this.props.awayTeam.logoSrc}\r\n                        stats={this.state.awayTeamStats}\r\n                        shotHandler={() => this.shoot('away')}\r\n                    />\r\n\r\n                    <div className=\"versus\">\r\n                        <h2>VS</h2>\r\n                        <div>\r\n                            <strong>Resets</strong> {this.state.resetCount}\r\n                            <button onClick={this.resetGame}>Reset Game</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Team name={this.props.homeTeam.name}\r\n                        logo={this.props.homeTeam.logoSrc}\r\n                        stats={this.state.homeTeamStats}\r\n                        shotHandler={() => this.shoot('home')}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport './App.css';\nimport Game from './components/game/Game';\nimport Blockerlogo from './assets/images/Lebron-blockers.jpeg';\nimport Stealerlogo from './assets/images/CP3-Stealers.jpg';\nimport Shooterlogo from './assets/images/Steph-Shooters.jpg';\nimport Dunkerlogo from './assets/images/MJ-Dunkers.jpg';\n\n\n\nfunction App(props) {\n  const blockers = {\n      name: 'Strong Blockers',\n      logoSrc: Blockerlogo\n  }\n\n  const stealers = {\n      name: 'Smooth Stealers',\n      logoSrc: Stealerlogo\n  }\n\n  const shooters = {\n      name: 'Lethal Shooters',\n      logoSrc: Shooterlogo\n  }\n\n  const dunkers = {\n      name: 'High Jumpers',\n      logoSrc: Dunkerlogo\n      // Images from google.com\n\n  }\n  return (\n      <div className=\"App\">\n      \n          <Game\n              venue=\"Hardwood War\"\n              homeTeam={stealers}\n              awayTeam={blockers}\n          />\n\n          <Game\n              venue=\"Mamba Arena\"\n              homeTeam={shooters}\n              awayTeam={dunkers}\n          />\n      </div>\n  )\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}